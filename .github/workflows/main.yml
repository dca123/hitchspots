# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment:
      name: deploy
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:      
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
            ruby-version: 2.7.2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2'
      - name: Setup Keys and Files
        shell: bash
          env:
            ENV_FILE: ${{ secrets.ENV_FILE }}
            GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
            KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
            SERVICE_KEY: ${{ secrets.SERVICE_KEY }}
            MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
            UPLOAD_KEYSTORE: ${{ secrets.UPLOAD_KEYSTORE }}
          run: |
            echo "$ENV_FILE" | base64 --decode > .env
            echo "$GOOGLE_SERVICES" | base64 --decode > ./android/app/google-services.json
            echo "$MAPS_API_KEY" | base64 --decode >> ./android/local.properties
            echo "$KEY_PROPERTIES" | base64 --decode > ./android/key.properties
            echo "$UPLOAD_KEYSTORE" | base64 --decode > ./android/upload-keystore.jks
                              

          cat ./android/key.properties          
      - uses: maierj/fastlane-action@v2.0.1
        with:
          lane: 'alpha'
          subdirectory: 'android'
